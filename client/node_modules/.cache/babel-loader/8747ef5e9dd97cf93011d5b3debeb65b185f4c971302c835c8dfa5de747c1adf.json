{"ast":null,"code":"// Local storage service for storing business data\n\n// Save business data to localStorage\nexport const saveBusinessData = businessData => {\n  try {\n    // Add timestamp and ID\n    const enhancedData = {\n      ...businessData,\n      _id: 'local-' + Date.now(),\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n\n    // If there's no enhanced profile, create a simple one\n    if (!enhancedData.enhancedProfile) {\n      enhancedData.enhancedProfile = {\n        enhancedDescription: `${businessData.name} is a ${businessData.category} business located in ${businessData.location}. ${businessData.description}`,\n        strengths: [\"Quality products/services\", \"Customer-focused approach\", \"Experienced team\", \"Competitive pricing\", \"Innovative solutions\"],\n        targetSegments: [\"Local customers\", \"Online shoppers\", \"Business clients\"],\n        marketingSuggestions: [\"Develop a strong social media presence\", \"Create targeted email marketing campaigns\", \"Implement a customer referral program\"]\n      };\n    }\n\n    // Save to localStorage\n    localStorage.setItem('businessData', JSON.stringify(enhancedData));\n    return {\n      success: true,\n      message: 'Business profile saved successfully',\n      business: enhancedData\n    };\n  } catch (error) {\n    console.error('Error saving business data to localStorage:', error);\n    throw new Error('Failed to save business data');\n  }\n};\n\n// Get business data from localStorage\nexport const getBusinessData = () => {\n  try {\n    const data = localStorage.getItem('businessData');\n    if (!data) {\n      return null;\n    }\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Error getting business data from localStorage:', error);\n    return null;\n  }\n};\n\n// Update business data in localStorage\nexport const updateBusinessData = businessData => {\n  try {\n    // Get existing data\n    const existingData = getBusinessData();\n    if (!existingData) {\n      return saveBusinessData(businessData);\n    }\n\n    // Merge with existing data\n    const updatedData = {\n      ...existingData,\n      ...businessData,\n      updatedAt: new Date().toISOString()\n    };\n\n    // Save to localStorage\n    localStorage.setItem('businessData', JSON.stringify(updatedData));\n    return {\n      success: true,\n      message: 'Business profile updated successfully',\n      business: updatedData\n    };\n  } catch (error) {\n    console.error('Error updating business data in localStorage:', error);\n    throw new Error('Failed to update business data');\n  }\n};\n\n// Delete business data from localStorage\nexport const deleteBusinessData = () => {\n  try {\n    localStorage.removeItem('businessData');\n    return {\n      success: true,\n      message: 'Business profile deleted successfully'\n    };\n  } catch (error) {\n    console.error('Error deleting business data from localStorage:', error);\n    throw new Error('Failed to delete business data');\n  }\n};","map":{"version":3,"names":["saveBusinessData","businessData","enhancedData","_id","Date","now","createdAt","toISOString","updatedAt","enhancedProfile","enhancedDescription","name","category","location","description","strengths","targetSegments","marketingSuggestions","localStorage","setItem","JSON","stringify","success","message","business","error","console","Error","getBusinessData","data","getItem","parse","updateBusinessData","existingData","updatedData","deleteBusinessData","removeItem"],"sources":["/Users/ayush/Desktop/hackathon/client/src/services/localStorage.js"],"sourcesContent":["// Local storage service for storing business data\n\n// Save business data to localStorage\nexport const saveBusinessData = (businessData) => {\n  try {\n    // Add timestamp and ID\n    const enhancedData = {\n      ...businessData,\n      _id: 'local-' + Date.now(),\n      createdAt: new Date().toISOString(),\n      updatedAt: new Date().toISOString()\n    };\n    \n    // If there's no enhanced profile, create a simple one\n    if (!enhancedData.enhancedProfile) {\n      enhancedData.enhancedProfile = {\n        enhancedDescription: `${businessData.name} is a ${businessData.category} business located in ${businessData.location}. ${businessData.description}`,\n        strengths: [\n          \"Quality products/services\",\n          \"Customer-focused approach\",\n          \"Experienced team\",\n          \"Competitive pricing\",\n          \"Innovative solutions\"\n        ],\n        targetSegments: [\n          \"Local customers\",\n          \"Online shoppers\",\n          \"Business clients\"\n        ],\n        marketingSuggestions: [\n          \"Develop a strong social media presence\",\n          \"Create targeted email marketing campaigns\",\n          \"Implement a customer referral program\"\n        ]\n      };\n    }\n    \n    // Save to localStorage\n    localStorage.setItem('businessData', JSON.stringify(enhancedData));\n    \n    return {\n      success: true,\n      message: 'Business profile saved successfully',\n      business: enhancedData\n    };\n  } catch (error) {\n    console.error('Error saving business data to localStorage:', error);\n    throw new Error('Failed to save business data');\n  }\n};\n\n// Get business data from localStorage\nexport const getBusinessData = () => {\n  try {\n    const data = localStorage.getItem('businessData');\n    if (!data) {\n      return null;\n    }\n    return JSON.parse(data);\n  } catch (error) {\n    console.error('Error getting business data from localStorage:', error);\n    return null;\n  }\n};\n\n// Update business data in localStorage\nexport const updateBusinessData = (businessData) => {\n  try {\n    // Get existing data\n    const existingData = getBusinessData();\n    \n    if (!existingData) {\n      return saveBusinessData(businessData);\n    }\n    \n    // Merge with existing data\n    const updatedData = {\n      ...existingData,\n      ...businessData,\n      updatedAt: new Date().toISOString()\n    };\n    \n    // Save to localStorage\n    localStorage.setItem('businessData', JSON.stringify(updatedData));\n    \n    return {\n      success: true,\n      message: 'Business profile updated successfully',\n      business: updatedData\n    };\n  } catch (error) {\n    console.error('Error updating business data in localStorage:', error);\n    throw new Error('Failed to update business data');\n  }\n};\n\n// Delete business data from localStorage\nexport const deleteBusinessData = () => {\n  try {\n    localStorage.removeItem('businessData');\n    return {\n      success: true,\n      message: 'Business profile deleted successfully'\n    };\n  } catch (error) {\n    console.error('Error deleting business data from localStorage:', error);\n    throw new Error('Failed to delete business data');\n  }\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
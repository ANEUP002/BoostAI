{"ast":null,"code":"import axios from 'axios';\nimport { saveBusinessData, getBusinessData, updateBusinessData, deleteBusinessData } from './localStorage';\nconst API_URL = 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const registerUserWithBackend = async userData => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\nexport const getUserByFirebaseUid = async firebaseUid => {\n  const response = await api.get(`/auth/firebase/${firebaseUid}`);\n  return response.data;\n};\nexport const getCurrentUserFromBackend = async () => {\n  const response = await api.get('/auth/me');\n  return response.data;\n};\n\n// Business API calls\nexport const createBusiness = async businessData => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.post('/business', businessData);\n      return response.data;\n    } catch (serverError) {\n      console.log('Server storage failed, using localStorage instead:', serverError);\n\n      // If server fails, use localStorage\n      return saveBusinessData(businessData);\n    }\n  } catch (error) {\n    console.error('API error creating business:', error);\n    throw error;\n  }\n};\nexport const getBusiness = async () => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.get('/business');\n      return response.data;\n    } catch (serverError) {\n      console.log('Server retrieval failed, using localStorage instead:', serverError);\n\n      // If server fails, use localStorage\n      return getBusinessData();\n    }\n  } catch (error) {\n    console.error('API error getting business:', error);\n    return null;\n  }\n};\nexport const updateBusiness = async businessData => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.put('/business', businessData);\n      return response.data;\n    } catch (serverError) {\n      console.log('Server update failed, using localStorage instead:', serverError);\n\n      // If server fails, use localStorage\n      return updateBusinessData(businessData);\n    }\n  } catch (error) {\n    console.error('API error updating business:', error);\n    throw error;\n  }\n};\nexport const deleteBusiness = async () => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.delete('/business');\n      return response.data;\n    } catch (serverError) {\n      console.log('Server deletion failed, using localStorage instead:', serverError);\n\n      // If server fails, use localStorage\n      return deleteBusinessData();\n    }\n  } catch (error) {\n    console.error('API error deleting business:', error);\n    throw error;\n  }\n};\n\n// Website API calls\nexport const generateWebsite = async websiteData => {\n  const response = await api.post('/website/generate', websiteData);\n  return response.data;\n};\n\n// Social media API calls\nexport const generateSocialMediaGuide = async socialData => {\n  const response = await api.post('/social/guide', socialData);\n  return response.data;\n};\n\n// Ad API calls\nexport const generateTextAd = async () => {\n  const response = await api.post('/ads/text');\n  return response.data;\n};\nexport const generateImageAd = async () => {\n  const response = await api.post('/ads/image');\n  return response.data;\n};\nexport const generateVideoAd = async () => {\n  const response = await api.post('/ads/video');\n  return response.data;\n};\n\n// Marketing API calls\nexport const generateMarketingStrategy = async marketingData => {\n  const response = await api.post('/marketing/strategy', marketingData);\n  return response.data;\n};\n\n// Add this function to test the API\nexport const testBusinessCreation = async businessData => {\n  try {\n    const response = await api.post('/business/test', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API test error:', error.response || error);\n    throw error;\n  }\n};\n\n// Add this function to use the simple business creation endpoint\nexport const createBusinessSimple = async businessData => {\n  try {\n    const response = await api.post('/business/simple', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error creating business (simple):', error.response || error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","saveBusinessData","getBusinessData","updateBusinessData","deleteBusinessData","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","registerUserWithBackend","userData","response","post","data","getUserByFirebaseUid","firebaseUid","get","getCurrentUserFromBackend","createBusiness","businessData","serverError","console","log","getBusiness","updateBusiness","put","deleteBusiness","delete","generateWebsite","websiteData","generateSocialMediaGuide","socialData","generateTextAd","generateImageAd","generateVideoAd","generateMarketingStrategy","marketingData","testBusinessCreation","createBusinessSimple"],"sources":["/Users/ayush/Desktop/hackathon/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { \n  saveBusinessData, \n  getBusinessData, \n  updateBusinessData, \n  deleteBusinessData \n} from './localStorage';\n\nconst API_URL = 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const registerUserWithBackend = async (userData) => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\n\nexport const getUserByFirebaseUid = async (firebaseUid) => {\n  const response = await api.get(`/auth/firebase/${firebaseUid}`);\n  return response.data;\n};\n\nexport const getCurrentUserFromBackend = async () => {\n  const response = await api.get('/auth/me');\n  return response.data;\n};\n\n// Business API calls\nexport const createBusiness = async (businessData) => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.post('/business', businessData);\n      return response.data;\n    } catch (serverError) {\n      console.log('Server storage failed, using localStorage instead:', serverError);\n      \n      // If server fails, use localStorage\n      return saveBusinessData(businessData);\n    }\n  } catch (error) {\n    console.error('API error creating business:', error);\n    throw error;\n  }\n};\n\nexport const getBusiness = async () => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.get('/business');\n      return response.data;\n    } catch (serverError) {\n      console.log('Server retrieval failed, using localStorage instead:', serverError);\n      \n      // If server fails, use localStorage\n      return getBusinessData();\n    }\n  } catch (error) {\n    console.error('API error getting business:', error);\n    return null;\n  }\n};\n\nexport const updateBusiness = async (businessData) => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.put('/business', businessData);\n      return response.data;\n    } catch (serverError) {\n      console.log('Server update failed, using localStorage instead:', serverError);\n      \n      // If server fails, use localStorage\n      return updateBusinessData(businessData);\n    }\n  } catch (error) {\n    console.error('API error updating business:', error);\n    throw error;\n  }\n};\n\nexport const deleteBusiness = async () => {\n  try {\n    // First try the server endpoint\n    try {\n      const response = await api.delete('/business');\n      return response.data;\n    } catch (serverError) {\n      console.log('Server deletion failed, using localStorage instead:', serverError);\n      \n      // If server fails, use localStorage\n      return deleteBusinessData();\n    }\n  } catch (error) {\n    console.error('API error deleting business:', error);\n    throw error;\n  }\n};\n\n// Website API calls\nexport const generateWebsite = async (websiteData) => {\n  const response = await api.post('/website/generate', websiteData);\n  return response.data;\n};\n\n// Social media API calls\nexport const generateSocialMediaGuide = async (socialData) => {\n  const response = await api.post('/social/guide', socialData);\n  return response.data;\n};\n\n// Ad API calls\nexport const generateTextAd = async () => {\n  const response = await api.post('/ads/text');\n  return response.data;\n};\n\nexport const generateImageAd = async () => {\n  const response = await api.post('/ads/image');\n  return response.data;\n};\n\nexport const generateVideoAd = async () => {\n  const response = await api.post('/ads/video');\n  return response.data;\n};\n\n// Marketing API calls\nexport const generateMarketingStrategy = async (marketingData) => {\n  const response = await api.post('/marketing/strategy', marketingData);\n  return response.data;\n};\n\n// Add this function to test the API\nexport const testBusinessCreation = async (businessData) => {\n  try {\n    const response = await api.post('/business/test', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API test error:', error.response || error);\n    throw error;\n  }\n};\n\n// Add this function to use the simple business creation endpoint\nexport const createBusinessSimple = async (businessData) => {\n  try {\n    const response = await api.post('/business/simple', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error creating business (simple):', error.response || error);\n    throw error;\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
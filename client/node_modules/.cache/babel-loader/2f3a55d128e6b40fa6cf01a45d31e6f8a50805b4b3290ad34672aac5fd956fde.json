{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const registerUserWithBackend = async userData => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\nexport const getUserByFirebaseUid = async firebaseUid => {\n  const response = await api.get(`/auth/firebase/${firebaseUid}`);\n  return response.data;\n};\nexport const getCurrentUserFromBackend = async () => {\n  const response = await api.get('/auth/me');\n  return response.data;\n};\n\n// Business API calls\nexport const createBusiness = async businessData => {\n  try {\n    const response = await api.post('/business', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error creating business:', error);\n    throw error;\n  }\n};\nexport const getBusiness = async () => {\n  try {\n    const response = await api.get('/business');\n    return response.data;\n  } catch (error) {\n    console.error('API error getting business:', error);\n    // If business not found, return null instead of throwing\n    if (error.response && error.response.status === 404) {\n      return null;\n    }\n    throw error;\n  }\n};\nexport const updateBusiness = async businessData => {\n  try {\n    const response = await api.put('/business', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error updating business:', error);\n    throw error;\n  }\n};\nexport const deleteBusiness = async () => {\n  try {\n    const response = await api.delete('/business');\n    return response.data;\n  } catch (error) {\n    console.error('API error deleting business:', error);\n    throw error;\n  }\n};\n\n// Website API calls\nexport const generateWebsite = async websiteData => {\n  const response = await api.post('/website/generate', websiteData);\n  return response.data;\n};\n\n// Social media API calls\nexport const generateSocialMediaGuide = async socialData => {\n  const response = await api.post('/social/guide', socialData);\n  return response.data;\n};\n\n// Ad API calls\nexport const generateTextAd = async adDetails => {\n  try {\n    const response = await fetch('http://localhost:5005/api/ads/text', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...adDetails,\n        user_id: localStorage.getItem('userId') || 'anonymous'\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate text ad');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error generating text ad:', error);\n    throw error;\n  }\n};\nexport const generateImageAd = async adDetails => {\n  try {\n    const response = await fetch('http://localhost:5005/api/ads/image', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...adDetails,\n        user_id: localStorage.getItem('userId') || 'anonymous'\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate image ad');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error generating image ad:', error);\n    throw error;\n  }\n};\nexport const generateVideoAd = async adDetails => {\n  try {\n    const response = await fetch('http://localhost:5005/api/ads/video', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...adDetails,\n        user_id: localStorage.getItem('userId') || 'anonymous'\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate video ad');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error generating video ad:', error);\n    throw error;\n  }\n};\n\n// Marketing API calls\nexport const generateMarketingStrategy = async marketingData => {\n  const response = await api.post('/marketing/strategy', marketingData);\n  return response.data;\n};\n\n// Add this function to test the API\nexport const testBusinessCreation = async businessData => {\n  try {\n    const response = await api.post('/business/test', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API test error:', error.response || error);\n    throw error;\n  }\n};\n\n// Add this function to use the simple business creation endpoint\nexport const createBusinessSimple = async businessData => {\n  try {\n    const response = await api.post('/business/simple', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error creating business (simple):', error.response || error);\n    throw error;\n  }\n};\n\n// Generate advertisement options\nexport const generateAds = async adDetails => {\n  try {\n    // Only allow image or video ad types\n    if (adDetails.ad_format !== 'image' && adDetails.ad_format !== 'video') {\n      adDetails.ad_format = 'image'; // Default to image if invalid type\n    }\n    const response = await fetch('http://localhost:5005/generate-ads', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(adDetails)\n    });\n    if (!response.ok) {\n      throw new Error('Failed to generate ads');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error generating ads:', error);\n    throw error;\n  }\n};\n\n// Save ad generation responses to server\nexport const saveAdResponses = async responses => {\n  try {\n    const userId = localStorage.getItem('userId') || 'anonymous';\n    const response = await fetch(`http://localhost:5005/api/ads/responses/${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        responses\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to save ad responses');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error saving ad responses:', error);\n    throw error;\n  }\n};\n\n// Get saved ad responses from server\nexport const getAdResponses = async () => {\n  try {\n    const userId = localStorage.getItem('userId') || 'anonymous';\n    const response = await fetch(`http://localhost:5005/api/ads/responses/${userId}`);\n    if (!response.ok) {\n      throw new Error('Failed to get ad responses');\n    }\n    const data = await response.json();\n    return data.responses;\n  } catch (error) {\n    console.error('Error getting ad responses:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","registerUserWithBackend","userData","response","post","data","getUserByFirebaseUid","firebaseUid","get","getCurrentUserFromBackend","createBusiness","businessData","console","getBusiness","status","updateBusiness","put","deleteBusiness","delete","generateWebsite","websiteData","generateSocialMediaGuide","socialData","generateTextAd","adDetails","fetch","method","body","JSON","stringify","user_id","ok","Error","json","generateImageAd","generateVideoAd","generateMarketingStrategy","marketingData","testBusinessCreation","createBusinessSimple","generateAds","ad_format","saveAdResponses","responses","userId","getAdResponses"],"sources":["/Users/ayush/Desktop/hackathon/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:5001/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Auth API calls\nexport const registerUserWithBackend = async (userData) => {\n  const response = await api.post('/auth/register', userData);\n  return response.data;\n};\n\nexport const getUserByFirebaseUid = async (firebaseUid) => {\n  const response = await api.get(`/auth/firebase/${firebaseUid}`);\n  return response.data;\n};\n\nexport const getCurrentUserFromBackend = async () => {\n  const response = await api.get('/auth/me');\n  return response.data;\n};\n\n// Business API calls\nexport const createBusiness = async (businessData) => {\n  try {\n    const response = await api.post('/business', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error creating business:', error);\n    throw error;\n  }\n};\n\nexport const getBusiness = async () => {\n  try {\n    const response = await api.get('/business');\n    return response.data;\n  } catch (error) {\n    console.error('API error getting business:', error);\n    // If business not found, return null instead of throwing\n    if (error.response && error.response.status === 404) {\n      return null;\n    }\n    throw error;\n  }\n};\n\nexport const updateBusiness = async (businessData) => {\n  try {\n    const response = await api.put('/business', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error updating business:', error);\n    throw error;\n  }\n};\n\nexport const deleteBusiness = async () => {\n  try {\n    const response = await api.delete('/business');\n    return response.data;\n  } catch (error) {\n    console.error('API error deleting business:', error);\n    throw error;\n  }\n};\n\n// Website API calls\nexport const generateWebsite = async (websiteData) => {\n  const response = await api.post('/website/generate', websiteData);\n  return response.data;\n};\n\n// Social media API calls\nexport const generateSocialMediaGuide = async (socialData) => {\n  const response = await api.post('/social/guide', socialData);\n  return response.data;\n};\n\n// Ad API calls\nexport const generateTextAd = async (adDetails) => {\n  try {\n    const response = await fetch('http://localhost:5005/api/ads/text', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...adDetails,\n        user_id: localStorage.getItem('userId') || 'anonymous'\n      }),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to generate text ad');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error generating text ad:', error);\n    throw error;\n  }\n};\n\nexport const generateImageAd = async (adDetails) => {\n  try {\n    const response = await fetch('http://localhost:5005/api/ads/image', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...adDetails,\n        user_id: localStorage.getItem('userId') || 'anonymous'\n      }),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to generate image ad');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error generating image ad:', error);\n    throw error;\n  }\n};\n\nexport const generateVideoAd = async (adDetails) => {\n  try {\n    const response = await fetch('http://localhost:5005/api/ads/video', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...adDetails,\n        user_id: localStorage.getItem('userId') || 'anonymous'\n      }),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to generate video ad');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error generating video ad:', error);\n    throw error;\n  }\n};\n\n// Marketing API calls\nexport const generateMarketingStrategy = async (marketingData) => {\n  const response = await api.post('/marketing/strategy', marketingData);\n  return response.data;\n};\n\n// Add this function to test the API\nexport const testBusinessCreation = async (businessData) => {\n  try {\n    const response = await api.post('/business/test', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API test error:', error.response || error);\n    throw error;\n  }\n};\n\n// Add this function to use the simple business creation endpoint\nexport const createBusinessSimple = async (businessData) => {\n  try {\n    const response = await api.post('/business/simple', businessData);\n    return response.data;\n  } catch (error) {\n    console.error('API error creating business (simple):', error.response || error);\n    throw error;\n  }\n};\n\n// Generate advertisement options\nexport const generateAds = async (adDetails) => {\n  try {\n    // Only allow image or video ad types\n    if (adDetails.ad_format !== 'image' && adDetails.ad_format !== 'video') {\n      adDetails.ad_format = 'image'; // Default to image if invalid type\n    }\n    \n    const response = await fetch('http://localhost:5005/generate-ads', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(adDetails),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to generate ads');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error generating ads:', error);\n    throw error;\n  }\n};\n\n// Save ad generation responses to server\nexport const saveAdResponses = async (responses) => {\n  try {\n    const userId = localStorage.getItem('userId') || 'anonymous';\n    const response = await fetch(`http://localhost:5005/api/ads/responses/${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ responses }),\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to save ad responses');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error saving ad responses:', error);\n    throw error;\n  }\n};\n\n// Get saved ad responses from server\nexport const getAdResponses = async () => {\n  try {\n    const userId = localStorage.getItem('userId') || 'anonymous';\n    const response = await fetch(`http://localhost:5005/api/ads/responses/${userId}`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to get ad responses');\n    }\n    \n    const data = await response.json();\n    return data.responses;\n  } catch (error) {\n    console.error('Error getting ad responses:', error);\n    throw error;\n  }\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
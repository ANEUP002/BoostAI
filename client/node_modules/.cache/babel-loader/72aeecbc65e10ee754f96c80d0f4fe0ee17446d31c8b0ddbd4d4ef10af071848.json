{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Desktop/hackathon/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { auth, getCurrentUser } from '../services/firebase';\nimport { getUserByFirebaseUid, registerUserWithBackend } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const firebaseUser = await getCurrentUser();\n        if (firebaseUser) {\n          try {\n            // Try to get user from backend\n            const {\n              token: newToken,\n              user\n            } = await getUserByFirebaseUid(firebaseUser.uid);\n\n            // Set token in localStorage\n            localStorage.setItem('token', newToken);\n            setToken(newToken);\n            setCurrentUser(user);\n          } catch (error) {\n            // If user doesn't exist in backend, create one\n            if (error.response && error.response.status === 404) {\n              const userData = {\n                firebaseUid: firebaseUser.uid,\n                email: firebaseUser.email,\n                displayName: firebaseUser.displayName || ''\n              };\n              const {\n                token: newToken,\n                user\n              } = await registerUserWithBackend(userData);\n\n              // Set token in localStorage\n              localStorage.setItem('token', newToken);\n              setToken(newToken);\n              setCurrentUser(user);\n            } else {\n              console.error('Error getting user from backend:', error);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n\n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged(async firebaseUser => {\n      if (firebaseUser) {\n        try {\n          // Try to get user from backend\n          const {\n            token: newToken,\n            user\n          } = await getUserByFirebaseUid(firebaseUser.uid);\n\n          // Set token in localStorage\n          localStorage.setItem('token', newToken);\n          setToken(newToken);\n          setCurrentUser(user);\n        } catch (error) {\n          console.error('Error getting user from backend:', error);\n        }\n      } else {\n        // User is signed out\n        localStorage.removeItem('token');\n        setToken(null);\n        setCurrentUser(null);\n      }\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    token,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"jtwUNoxKZ5AWYW2pfoZjKzJF1gw=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","auth","getCurrentUser","getUserByFirebaseUid","registerUserWithBackend","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","token","setToken","localStorage","getItem","initAuth","firebaseUser","newToken","user","uid","setItem","error","response","status","userData","firebaseUid","email","displayName","console","unsubscribe","onAuthStateChanged","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayush/Desktop/hackathon/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport { auth, getCurrentUser } from '../services/firebase';\nimport { getUserByFirebaseUid, registerUserWithBackend } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  useEffect(() => {\n    const initAuth = async () => {\n      try {\n        const firebaseUser = await getCurrentUser();\n        \n        if (firebaseUser) {\n          try {\n            // Try to get user from backend\n            const { token: newToken, user } = await getUserByFirebaseUid(firebaseUser.uid);\n            \n            // Set token in localStorage\n            localStorage.setItem('token', newToken);\n            setToken(newToken);\n            setCurrentUser(user);\n          } catch (error) {\n            // If user doesn't exist in backend, create one\n            if (error.response && error.response.status === 404) {\n              const userData = {\n                firebaseUid: firebaseUser.uid,\n                email: firebaseUser.email,\n                displayName: firebaseUser.displayName || ''\n              };\n              \n              const { token: newToken, user } = await registerUserWithBackend(userData);\n              \n              // Set token in localStorage\n              localStorage.setItem('token', newToken);\n              setToken(newToken);\n              setCurrentUser(user);\n            } else {\n              console.error('Error getting user from backend:', error);\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error initializing auth:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    initAuth();\n    \n    // Listen for auth state changes\n    const unsubscribe = auth.onAuthStateChanged(async (firebaseUser) => {\n      if (firebaseUser) {\n        try {\n          // Try to get user from backend\n          const { token: newToken, user } = await getUserByFirebaseUid(firebaseUser.uid);\n          \n          // Set token in localStorage\n          localStorage.setItem('token', newToken);\n          setToken(newToken);\n          setCurrentUser(user);\n        } catch (error) {\n          console.error('Error getting user from backend:', error);\n        }\n      } else {\n        // User is signed out\n        localStorage.removeItem('token');\n        setToken(null);\n        setCurrentUser(null);\n      }\n    });\n    \n    return unsubscribe;\n  }, []);\n  \n  const value = {\n    currentUser,\n    token,\n    loading\n  };\n  \n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}